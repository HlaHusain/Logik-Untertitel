0:00:01.040,0:00:07.569
Ich hatte das letzte Video mit diesem Beispiel
geschlossen. Ein Beispiel für Grundresolution.

0:00:07.569,0:00:14.290
Und daran hatten wir schon gesehen, dass
wir uns bei der Grundresolution immer direkt

0:00:14.290,0:00:20.200
vor jedem Resolutionsschritt für alle
Variablen auf Grundterme festlegen müssen.

0:00:20.200,0:00:25.590
Das heißt zum Beispiel, dass hier in dem
linken Teil, wo wir eigentlich die P-Literale

0:00:25.590,0:00:31.969
resolvieren wollen, wir uns dennoch für
dieses y, das hier in dem Q auftaucht,

0:00:31.969,0:00:38.890
auf einen Term (in dem Fall, eine
Konstante) festlegen, hier b.

0:00:38.890,0:00:44.300
Und ich hatte das hier schon getan in sozusagen
weiser Vorausschau, weil ich wusste, dass ich

0:00:44.300,0:00:49.440
von hier rechts ein "¬Q(b)"-Literal
habe, mit dem ich später

0:00:49.440,0:00:55.840
dann hier resolvieren kann. Das heißt, das y
habe ich hier auf b gesetzt, obwohl das rein

0:00:55.840,0:01:02.560
von der linken Seite noch gar nicht motiviert
gewesen war. Und in ähnlicher Weise sehen wir

0:01:02.560,0:01:10.950
hier rechts, dass wir uns für die Verarbeitung
dieser beiden Klauseln, und insbesondere bei der

0:01:10.950,0:01:15.330
Instanziierung an dieser rechten Klausel hier,
für das x auf irgendwas festlegen müssen.

0:01:15.330,0:01:20.040
Wir müssen das grundinstanziieren. Wir müssen also,
um hier mit Grundresolution resolvieren zu können,

0:01:20.040,0:01:24.740
das x irgendwie belegen. Ich habe das jetzt
hier mit a belegt und dann entsprechend auch

0:01:24.740,0:01:30.170
hier drüben eine Wahl getroffen. Nämlich an der
gleichen Stelle das a, sodass dann diese beiden

0:01:30.170,0:01:36.810
Literale resolviert werden konnten. Aber auch diese
Festlegung auf dieses [x / a], das ist eigentlich überflüssig

0:01:36.810,0:01:43.960
oder verfrüht. Es gibt hier keinen vernünftigen Grund,
der das erzwingt, dass man das x unbedingt auf a

0:01:43.960,0:01:48.610
setzen muss. Aber ich musste es hier setzen,
damit ich Grundresolution anwenden konnte.

0:01:48.610,0:01:53.590
Wenn man genau draufschaut: Bei der restlichen Abarbeitung
spielte das [x / a] nie wieder eine Rolle. Also hätte man sich

0:01:53.590,0:01:58.170
auch wünschen können, dass man das hier nicht unbedingt
setzen muss. Aber die Grundresolution erfordert das.

0:01:58.170,0:02:01.340
Und da kann man eben auch in eine Sackgasse geraten, weil
man hier vielleicht eine falsche Entscheidung trifft,

0:02:01.340,0:02:07.470
die weiter unten doch noch eine Rolle spielt und dann
anders hätte sein müssen. Das ist einfach eine Eigenschaft

0:02:07.470,0:02:12.579
dieser Grundresolution. Da hatte ich schon gesagt:
Deswegen wollen wir nicht nur Grundresolution haben.

0:02:12.579,0:02:18.219
Wir werden uns mit der allgemeineren,
prädikatenlogischen Resolution beschäftigen,

0:02:18.219,0:02:24.889
wo wir uns eben nicht per Grundinstanziierung
auf die aussagenlogische Resolution zurückziehen.

0:02:24.889,0:02:34.730
Also, wir wollen diese Vor-Festlegung auf
Grundterme vermeiden. Stattdessen können wir

0:02:34.730,0:02:41.209
solche Entscheidungen (welche Wahlen von Termen
für Variablen zu treffen sind) aufschieben.

0:02:41.209,0:02:46.879
Uns vielleicht für manche Variablen nie für irgendwas
Spezielles entscheiden. Zum Beispiel für dieses x hier

0:02:46.879,0:02:51.510
hätte man auch feststellen können: Das beeinflusst den weiteren
Weg gar nicht. Egal, was hier und hier steht. Ob das a ist oder

0:02:51.510,0:02:55.510
irgendwas anderes, diese Schritte wären genauso möglich gewesen.
Das heißt, man möchte diese Entscheidung einfach ganz vermeiden.

0:02:55.510,0:03:01.440
Und das erlaubt diese prädikatenlogische Resolution.
Dafür werden immer nur die unbedingt nötigen

0:03:01.440,0:03:05.819
Festlegungen getroffen. Also, ich habe einen konkreten
Resolutionsschritt, den ich durchführen möchte, und dann treffe ich nur

0:03:05.819,0:03:11.480
die Festlegungen auf Variablen, die unbedingt
nötig sind, um diesen einen Schritt durchzuführen.

0:03:11.480,0:03:16.109
Dafür muss ich dann natürlich mehr Informationen
festhalten. Ich muss nämlich für diese Variablen

0:03:16.109,0:03:21.049
vielleicht auch festhalten, wie sie nur zum Teil
instanziiert wurden. Nicht zu einem Grundterm,

0:03:21.049,0:03:25.809
sondern vielleicht zu einem Teilterm, in dem
noch weitere Variablen vorkommen. Das muss man

0:03:25.809,0:03:29.669
dann natürlich alles nachhalten und pflegen, um später
am Ende alle Entscheidungen richtig getroffen zu haben.

0:03:29.669,0:03:39.339
Und das möchte ich an einem Beispiel erklären
und dann an mehreren Fällen durchgehen.

0:03:39.339,0:03:49.930
Und das Beispiel soll genau das von der Vorfolie sein. Also
letztlich der linke Teil hier. Das, was hier links passiert.

0:03:49.930,0:03:58.680
Aber eben ohne schon vollständig zu instanziieren.
Also, wie wird das laufen? Zum einen, da wir nicht

0:03:58.680,0:04:03.390
einfach sofort alles grundinstanziieren, also
sozusagen Variablen überleben werden, müssen wir

0:04:03.390,0:04:08.590
auch in den resolvierten Termen sichergehen,
dass da keine Verwirrung zwischen den Variablen

0:04:08.590,0:04:12.959
auftreten kann. Das heißt, der erste Schritt wird immer
sein (wenn wir hier zwei Klauseln resolvieren wollen),

0:04:12.959,0:04:17.910
dass wir zunächst erstmal durch einfache
Variablenumbenennung, falls denn notwendig, dafür sorgen,

0:04:17.910,0:04:21.530
dass es keine gemeinsamen Variablen gibt. Hier gibt
es zum Beispiel links in der Klausel die Variable y

0:04:21.530,0:04:27.760
und hier rechts gibt es das y auch. Das ist aber gar
nicht das gleiche y. Es gibt keinen Grund, anzunehmen,

0:04:27.760,0:04:33.260
dass das unbedingt immer in jeder Instanziierung das Gleiche
sein muss. Das heißt, wir wollen das lieber umbenennen.

0:04:33.260,0:04:37.350
Ich hätte jetzt hier auch links sagen können:
Ich benenne dieses y um. In dem konkreten Fall

0:04:37.350,0:04:43.090
benenne ich mal das aus der rechten Klausel kommende y um.
Das schreibe ich natürlich so. Diese Notation kennen Sie schon

0:04:43.090,0:04:49.200
für Ersetzungen. Also ich ersetze y durch y'. Das heißt, ab
hier unten arbeite ich jetzt für diesen Resolutionsschritt

0:04:49.200,0:04:55.781
mit der Klausel P(y'). Das habe ich hierdurch
signalisiert, dass ich eigentlich diese Klausel

0:04:55.781,0:05:02.070
jetzt resolvieren werde, mit P(y'). Bei der Grundresolution
war das egal, ob hier und hier die gleiche Variable vorkommt,

0:05:02.070,0:05:06.850
weil ich die ja sowieso sofort durch Grundterme ersetze.
Dann sind die Variablen ja weg. Aber hier bei der

0:05:06.850,0:05:16.400
allgemeineren Resolution wird das nicht
unbedingt so sein. Das ist ein wichtiger Aspekt,

0:05:16.400,0:05:23.230
dass wir erstmal dafür sorgen, dass die Variablen
nicht in beiden Klauseln vorkommen. Natürlich darf

0:05:23.230,0:05:26.790
dennoch eine Variable x zum Beispiel in dieser Klausel
mehrfach vorkommen, auch in mehreren Literalen.

0:05:26.790,0:05:33.900
Das wäre okay. Aber es soll eben keine Variable hier
und hier vorkommen. Das erreiche ich durch Umbenennung.

0:05:33.900,0:05:38.000
Dann schaue ich mir an, was ich eigentlich resolvieren
wollte. Wir hatten festgestellt, dass es durchaus sein kann,

0:05:38.000,0:05:45.840
dass wir jetzt (anders als bei der Aussagenlogik)
durch diese Ersetzung in den Literalen,

0:05:45.840,0:05:49.460
durchaus den Fall haben können, dass
wir mehrere Literale von links oder von

0:05:49.460,0:05:55.310
rechts oder auch von beiden Seiten
zusammenführen. Deswegen habe ich hier jetzt

0:05:55.310,0:06:00.680
mal unterstrichen, welche Literale das jeweils sind.
Also ich möchte jetzt hier von links diese Literale

0:06:00.680,0:06:04.960
betrachten und komplementär dazu dieses Literal. Natürlich
ergibt das Sinn, weil hier ¬P und ¬P und hier P steht.

0:06:04.960,0:06:17.400
Dann ist noch die Frage, ob denn die jeweiligen
Argumente auch einheitlich hinzukriegen sind.

0:06:17.400,0:06:21.870
Vorher passierte es dadurch, dass ich einfach
geeignete Grundterme genommen habe, die genau

0:06:21.870,0:06:27.730
dafür sorgten, dass hier diese beiden Literale
zu diesem Literal wurden, dieses Literal zu

0:06:27.730,0:06:33.870
diesem Literal, und das genau passte. Jetzt möchte ich das
ja nicht unbedingt machen, indem ich voll instanziiere.

0:06:33.870,0:06:37.730
Aber dennoch muss ich die irgendwie passend machen. Was
kann ich in dem konkreten Fall machen? Zum Beispiel

0:06:37.730,0:06:44.850
indem ich x durch f(a) und von hier rechts das y',
was ja jetzt hier steht, auch durch f(a) ersetze.

0:06:44.850,0:06:50.170
Was ich nicht tue an dieser Stelle, ist: dieses y durch
irgendwas zu ersetzen. Anders als bei der Grundresolution,

0:06:50.170,0:06:55.680
wo ich hierfür dann schon b gewählt hatte.
Das mache ich jetzt hier eben bewusst nicht.

0:06:55.680,0:07:03.180
Ich treffe nur Festlegungen, die unbedingt nötig sind, um
diese beiden Literale und dieses Literal passend zu kriegen,

0:07:03.180,0:07:13.610
bzw. dieses Literal mit dem y'. Und das wäre so eine Instanziierung.
Es ist klar: Ich muss das y' und das x beides auf f(a) setzen,

0:07:13.610,0:07:20.340
denn das f(a) ist fest. Daran kann ich nichts ändern. Aber
ich kann x und y' auf f(a) setzen und dann passt das alles.

0:07:20.340,0:07:27.870
Wenn ich das tue, dann verschmilzt das eben jetzt
zu einem Literal, ¬P(f(a)). Hier habe ich P(f(a))

0:07:27.870,0:07:34.990
nach dieser Ersetzung. Dann kann ich
darüber resolvieren. Und heraus kommt das,

0:07:34.990,0:07:39.930
was übrig bleibt. Nämlich aus diesen beiden Mengen
jeweils hier die unterstrichenen Literale entfernt.

0:07:39.930,0:07:46.060
Es bleibt übrig: \{Q(y)\}. Aber eben auch wirklich
Q(y), und nicht wie in der Grundresolution Q(b).

0:07:46.060,0:07:53.460
Also diese Festlegung, y sei b, habe ich jetzt
noch nicht getroffen. Die war hier verfrüht.

0:07:53.460,0:07:59.520
Die wurde sozusagen eigentlich erst später notwendig. In
der allgemeineren Resolution mache ich das eben noch nicht,

0:07:59.520,0:08:06.460
sondern da kommt eine Klausel heraus, in der eben noch
eine Variable vorkommt. Und zwar das y von hier links.

0:08:06.460,0:08:14.740
Das ist nicht das y hier. Das hatte ich ja in y' umbenannt,
und beim "Gleichmachen" dieser Literale sogar noch das y'

0:08:14.740,0:08:26.060
dann entfernt durch f(a). Dieses y hier ist
von hier oben übrig geblieben. Was ist hier

0:08:26.060,0:08:36.349
noch festzuhalten? Dass wir hier mehrere Literale
benutzen. Das wird nicht unbedingt oft so sein.

0:08:36.349,0:08:41.209
Also die Beispiele werden größtenteils so sein,
dass wir tatsächlich genau ein Literal von links

0:08:41.209,0:08:46.490
und eins von rechts haben. Aber im allgemeinen Fall
kann es eben sinnvoll und nötig sein, das zu haben,

0:08:46.490,0:08:50.810
dass wir zwei Literale nehmen. Und deswegen mache ich
hier diese Unterstreichung. Diese Unterstreichung müssen

0:08:50.810,0:08:55.110
Sie, wenn Sie Aufgaben bearbeiten, nicht unbedingt machen.
Das wäre nur etwas für Sie selbst, um sich vielleicht

0:08:55.110,0:08:59.829
festzuhalten, welche Literale Sie gerade miteinander
resolvieren wollen oder resolviert haben.

0:08:59.829,0:09:05.829
Sie müssen ja auch bedenken: In einem größeren
Resolutionsbeweis, wenn hier rechts auch noch Klauseln sind und

0:09:05.829,0:09:10.100
weitere Resolutionen stattfinden, könnte es ja sein,
dass Sie eine Klausel mehrfach verwenden und dann

0:09:10.100,0:09:13.660
vielleicht auch verschiedene Literale daraus verwenden.
Und dann kann das mit dem Unterstreichen sehr schnell

0:09:13.660,0:09:18.019
unübersichtlich oder unklar werden. Das heißt, wir würden
das Unterstreichen bei der Bewertung nicht berücksichtigen.

0:09:18.019,0:09:22.139
Sie können das für sich zur Hilfestellung aber tun.
Vielleicht benutzen Sie dann verschiedene Farben,

0:09:22.139,0:09:27.829
um für verschiedene Resolutionsschritte, die Sie
durchführen, immer sozusagen für sich selbst festzuhalten,

0:09:27.829,0:09:37.250
wo jeweils welche Literale relevant waren.
Auch klar: Es kann nicht sein, dass wir hier

0:09:37.250,0:09:42.279
aus der linken Klausel zum Beispiel ein positives
und ein negatives Literal gehabt hätten.

0:09:42.279,0:09:47.259
Aus einer Klausel können entweder nur negative
oder nur positive Literale gewählt werden.

0:09:47.259,0:09:54.620
Und natürlich müssen die das gleiche Prädikatsymbol benutzen.
Denn sonst besteht gar keine Chance, sie durch Belegung

0:09:54.620,0:10:04.740
von Variablen irgendwie gleichzumachen.
Wo genau diese Substitution herkommt,

0:10:04.740,0:10:08.870
wie wir diese finden, das wird noch zu besprechen sein. Jetzt
hatte ich einfach gesagt: Das ist hier die richtige Wahl.

0:10:08.870,0:10:15.339
Wir werden im Folgenden dann noch sehen,
wie wir darauf auch kommen können, letztlich

0:10:15.339,0:10:21.180
auch algorithmisch. Was man an dem Beispiel noch
nicht sieht, was aber auch wichtig sein wird:

0:10:21.180,0:10:25.740
Natürlich ersetzen wir nur Variablen. Wenn hier irgendwie
eine Konstante b gestanden hätte, dürften wir die natürlich

0:10:25.740,0:10:31.949
nicht durch y ersetzen. Wir ersetzen immer nur Variablen, in dieser
Art Resolution. Sowohl hier bei der Umbenennung der Variablen,

0:10:31.949,0:10:40.470
als auch hier, werden wir dann für Variablen Terme
einsetzen. Das war auch nicht die einzige Wahl, die man hier

0:10:40.470,0:10:45.529
treffen hätte können. Zum Beispiel hätte ich mich
auch entscheiden können (das hatte ich schon erwähnt),

0:10:45.529,0:10:50.449
hier links das y umzubenennen. Ich habe auf der nächsten
Folie einfach mal, wie das dann ausgesehen hätte.

0:10:50.449,0:10:55.649
Das ist fast der gleiche Schritt. Es kommt auch fast
das Gleiche heraus. Hier habe ich einfach, statt

0:10:55.649,0:11:02.649
dieses y umzubenennen, dieses y umbenannt in y'. Und
dann ist auch diese Belegung hier leicht verschieden.

0:11:02.649,0:11:07.290
Denn dann haben wir jetzt hier y' stehen.
Aber hier immer noch y. Das heißt,

0:11:07.290,0:11:13.779
wir müssen dann dieses y durch f(a) ersetzen,
um das passend zu kriegen. Das heißt, hier

0:11:13.779,0:11:18.589
sind die Rollen von y und y' etwas anders und wir haben jetzt
hier von links diese Umbenennung. Es kann im Allgemeinen

0:11:18.589,0:11:23.890
auch sein, dass wir auf beiden Seiten Variablen
umbenennen. Dann schreibe ich das immer hier dran.

0:11:23.890,0:11:29.269
Da, wo ich keine Umbenennung mache, da steht
eben an dieser oberen Verbindung nichts dran.

0:11:29.269,0:11:34.730
Und in dem konkreten Fall führt das hier dazu, dass
dann unten Q(y') übrig bleibt. Das ist nicht falsch.

0:11:34.730,0:11:42.350
Da wird eben im weiteren Verlauf hier unten mit y'
gearbeitet. Das ist kein Widerspruch oder falsch.

0:11:42.350,0:11:48.379
Es kann da durchaus mehrere Möglichkeiten geben.
Auch hätte man in dem Fall, zum Beispiel, statt

0:11:48.379,0:11:53.009
mit diesen beiden Literalen auf einmal zu resolvieren,
das auch schrittweise tun können. Also doch immer nur

0:11:53.009,0:12:03.499
ein Literal auswählen und dann gegebenenfalls zwei
Resolutionsschritte durchführen. Das zeige ich auch nochmal.

0:12:03.499,0:12:10.369
Das hätte dann so ausgesehen: Ich habe jetzt
mal nicht unterstrichen, was ich gemacht habe.

0:12:10.369,0:12:18.809
Es ist aber aus dem Kontext klar, dass ich hier dieses Literal
mit diesem Literal resolviert habe. Dafür habe ich das y

0:12:18.809,0:12:25.570
von hier rechts in y' umbenannt, weil es ja nicht mit diesem
y irgendwie in Konflikt geraten soll. Dann muss ich also ¬P(x)

0:12:25.570,0:12:32.379
und P(y') in Einklang bringen. Das kann ich
zum Beispiel tun, indem ich x durch y' ersetze.

0:12:32.379,0:12:37.850
Es wäre auch umgekehrt gegangen. Auch hier hätte also
noch ein Freiheitsgrad bestanden. Ich hätte auch [y' / x]

0:12:37.850,0:12:45.629
schreiben können. Stattdessen habe ich es so herum gemacht. Wenn
ich das tue, verschwinden dieses Literal und dieses Literal.

0:12:45.629,0:12:52.389
Es bleiben diese beiden Literale übrig. Das y wird dabei
nicht berührt. Das sehen wir hier. Da wurde nur y durch y'

0:12:52.389,0:12:59.019
ersetzt auf der rechten Seite. Links wurde nichts
ersetzt. Und auch diese Ersetzung macht mit y nichts.

0:12:59.019,0:13:04.269
Also bleibt hier das übrig. Und dann kann ich
zum Beispiel (das wissen wir ja, wir dürfen ja

0:13:04.269,0:13:10.980
Klauseln mehrfach verwenden) nochmals resolvieren.
Wieder mit dieser Ursprungsklausel. Dafür würde

0:13:10.980,0:13:15.139
ich wieder y umbenennen, in dem Fall hier rechts, weil
das mit dem y hier nicht in Konflikt geraten soll.

0:13:15.139,0:13:20.679
Dann habe ich P(y'). Möchte das hiermit in
Einklang bringen. Das geht, indem ich y'

0:13:20.679,0:13:26.379
durch f(a) ersetze. Dann kann ich dieses Literal und
dieses Literal entfernen. Und es bleibt übrig: Q(y).

0:13:26.379,0:13:35.860
Natürlich genau wie auf der Folie zuvor,
nur mit zwei Schritten. Also, oft kann man

0:13:35.860,0:13:40.470
tatsächlich sozusagen davon ausgehen, dass man einfach
nur einzelne Schritte macht, mit einem Literal.

0:13:40.470,0:13:47.319
Das wird dann ein etwas größerer Baum vielleicht.
Oder ein etwas größerer Aufschrieb. (Das muss ja

0:13:47.319,0:13:52.490
kein Baum sein, aber ein größerer Aufschrieb dieser
Art, wenn man mehrere Schritte macht.) Aber dann kann

0:13:52.490,0:13:59.089
man sich sozusagen sparen, Ausschau nach solchen
Fällen zu halten, wo man mehrere Literale

0:13:59.089,0:14:10.410
auf einmal verarbeitet. Man muss natürlich aufpassen,
dass man dadurch keinen Lösungsweg verliert.

0:14:10.410,0:14:16.910
Wenn das geht, mit solchen einfachen Schritten,
dann können Sie eben auch so vorgehen.

0:14:16.910,0:14:21.050
Gemeinsam ist, wie gesagt, sowohl bei dem Schritt auf
der Vorfolie als auch bei diesen beiden Schritten hier,

0:14:21.050,0:14:30.199
dass wir uns noch nicht für das y in dem Q
irgendwie auf b festgelegt haben. Anders als es

0:14:30.199,0:14:38.420
die Grundresolution tat. Wenn wir jetzt nochmal
den Schritt von der Vorfolie nehmen und das

0:14:38.420,0:14:44.869
Beispiel verkomplettieren, dann kann das zum
Beispiel wie folgt ablaufen: Also, ich mache mal

0:14:44.869,0:14:49.839
alle drei Klauseln, die ich in dem Beispiel
ursprünglich hatte. Ich mache links das, was ich

0:14:49.839,0:14:59.300
auch zuerst diskutiert hatte. Also wo ich hier rechts
das y durch y' ersetze. Dann hier den Unifikator,

0:14:59.300,0:15:06.429
wie wir ihn gleich nennen werden, dieser Art bilde. Also
x und y' ersetze ich durch f(a), damit diese beiden

0:15:06.429,0:15:13.679
und dieses Literal auf einen Schlag verschwinden. Dann ist
das y hier immer noch unbelegt. Was kann rechts passieren?

0:15:13.679,0:15:21.070
Da würden wir dieses P(y) mit diesem ¬P "und so weiter"
verknüpfen. Variablen umbenennen muss man nicht.

0:15:21.070,0:15:25.730
Hier ist y. Hier ist x. Da überlappt sich nichts.
Also brauche ich sozusagen an dieser Zusammenführung

0:15:25.730,0:15:33.089
der beiden Klauseln erstmal keine Variablen
umbenennen. Dann möchte ich diese beiden Literale

0:15:33.089,0:15:38.809
in Einklang bringen. Das kann ich machen, indem
ich y durch g(b,x) ersetze. Anders als in der

0:15:38.809,0:15:46.889
Grundresolution lege ich mich also für das x
nicht irgendwie auf a oder auf irgendetwas fest.

0:15:46.889,0:16:01.850
Ich mache nur diese Ersetzung. Was kommt dann
heraus? Dann bleibt dieses Literal übrig.

0:16:01.850,0:16:11.709
Dann habe ich die Situation. Und erst jetzt beim Resolvieren
dieser beiden Klauseln würde ich tatsächlich feststellen,

0:16:11.709,0:16:18.089
und gezwungen sein, das y jetzt durch b zu ersetzen.
Statt das schon vorher in vorauseilendem Gehorsam

0:16:18.089,0:16:24.489
hier oben getan zu haben. Also, ich möchte die
beiden resolvieren. Variablen umbenennen muss ich

0:16:24.489,0:16:33.290
auf dem Weg dahin nicht, weil keine gemeinsamen Variablen
vorkommen. Und die In-Übereinstimmung-Bringung dieser

0:16:33.290,0:16:38.320
beiden Literalen führt dazu, dass ich dann
die Variable y durch die Konstante b ersetze,

0:16:38.320,0:16:44.819
weil ich dann die beiden Literale
gleichkriege bzw. die dann komplementär sind.

0:16:44.819,0:16:52.649
Und was kommt dann heraus? Natürlich die leere
Menge, weil dann diese beiden Literale verschwinden.

0:16:52.649,0:17:08.520
Dann kann man das mal vergleichen mit diesem
Weg. Wir sind in beiden Fällen zum Ziel gekommen,

0:17:08.520,0:17:15.329
hatten uns bei der Grundresolution aber
früher auf bestimmte Terme festlegen müssen.

0:17:15.329,0:17:21.570
Zum Beispiel hier auf das x, dass
das a sein soll. Das muss ich

0:17:21.570,0:17:28.280
bei diesem Lösungsweg überhaupt nicht tun. Aber auch für
das y habe ich hier schon sehr früh das b raten müssen,

0:17:28.280,0:17:35.690
während sich das bei der allgemeinen Resolution
im Laufe der Suche automatisch ergibt,

0:17:35.690,0:17:42.230
dass ich hier unten y an b knüpfen möchte. Statt das schon
hier beim ersten Schritt zu raten, damit es dann hier passt.

0:17:42.230,0:17:52.000
Das Ganze basiert natürlich darauf, dass
wir diese ganzen Belegungen immer finden.

0:17:52.000,0:18:00.860
Dafür brauchen wir noch ein Verfahren.
Das ist die sogenannte Unifikation.

0:18:00.860,0:18:07.070
Die hatte ich bei der Diskussion von Prolog schon
anklingen lassen und dort nur intuitiv benutzt.

0:18:07.070,0:18:14.020
Jetzt müssen wir das auch einmal allgemein erklären.
Was ist das Problem? Wir müssen in solchen

0:18:14.020,0:18:19.310
Resolutionsschritten jetzt jeweils
passende Variablenersetzungen finden.

0:18:19.310,0:18:25.230
Passend in dem Sinne, dass eine bestimmte Menge von
Literalen durch diese Ersetzungen gleich gemacht wird.

0:18:25.230,0:18:32.550
Ich habe jetzt hier immer nur die positiven Literale
aufgesammelt. Gemeint ist natürlich: Wenn ich etwa diese beiden

0:18:32.550,0:18:38.150
und dieses Literal resolvieren will, dann sind
die ja komplementär bis auf die Tatsache,

0:18:38.150,0:18:42.940
dass die Argumente noch nicht passen. Also, ich
betrachte dann die beiden positiven Varianten hiervon

0:18:42.940,0:18:47.130
und die hier vorhandene positive Variante.
Und wenn ich die alle gleich machen kann,

0:18:47.130,0:18:52.920
dann habe ich hier tatsächlich Komplementarität.
Also deswegen stehen in der ersten Zeile auf der

0:18:52.920,0:18:59.030
nächsten Folie genau diese drei Literale, aber in
positiver Form. Und genauso ist für die anderen Schritte,

0:18:59.030,0:19:04.480
die hier vorkommen, eben auch jeweils aufgeführt,
welche Mengen von Literalen jeweils relevant waren.

0:19:04.480,0:19:11.580
Und aus denen müssen irgendwie diese Variablenbelegungen
extrahiert werden. Oft ist das irgendwie sehr einfach.

0:19:11.580,0:19:16.660
Man guckt einfach scharf hin und sieht: Hier muss ich x und
y' durch f(a) ersetzen, zum Beispiel. Oder hier muss ich y

0:19:16.660,0:19:24.450
durch g(b,x) ersetzen. Und hier muss ich y durch b ersetzen.
Also, oft ist das sehr offenkundig. Aber es kann natürlich auch

0:19:24.450,0:19:32.330
komplizierter werden, wenn die Formeln und die Terme, die da
drin vorkommen, komplizierter werden. Wichtig ist in jedem Fall,

0:19:32.330,0:19:36.660
dass man immer einen allgemeinsten Unifikator bildet.
Also, dass man nicht zu viele Festlegungen trifft.

0:19:36.660,0:19:41.420
Sonst wäre man wieder bei der Grundresolution und könnte auch
Fehler machen. Bei der allgemeinen Resolution will man immer

0:19:41.420,0:19:49.140
einen sogenannten allgemeinsten Unifikator haben.

0:19:49.140,0:19:54.790
Im zweiten Beispiel etwa gäbe
es mehrere Möglichkeiten.

0:19:54.790,0:20:00.000
Wir könnten nur sagen: Wir ersetzen y durch g(b,x). Oder
wir könnten sagen, wie ich das in der Grundresolution hatte,

0:20:00.000,0:20:04.950
dass wir y durch g(b,a) ersetzen und x durch a.
Das ist auch ein Unifikator. Der macht diese beiden

0:20:04.950,0:20:09.570
Literale auch gleich. Das ist aber nicht ein
allgemeinster Unifikator. Denn der trifft unnötigerweise

0:20:09.570,0:20:16.410
diese Festlegung, dass x zu a wird. Also das
wollen wir gerade nicht tun. Wir wollen immer die

0:20:16.410,0:20:22.030
minimalen Zuweisungen an Variablen machen, um
die beiden Literale, oder sogar mehr als zwei

0:20:22.030,0:20:30.490
Literale, gleichzumachen. Also es geht
letztlich um so ein geschicktes Matching.

0:20:30.490,0:20:41.510
Ein nicht zu stark festlegendes Matching.
Prinzipiell geschieht das, indem wir uns jeweils

0:20:41.510,0:20:48.800
zwei Literale greifen und nach Unterschieden suchen.
Ich mache das mal an dem ersten Beispiel hier

0:20:48.800,0:20:54.920
nur beispielhaft. Auf der nächsten Folie stehen
dann die Regeln, die dabei angewandt werden.

0:20:54.920,0:20:59.540
Also etwa, wenn wir es mit dieser Menge zu tun
haben, könnten wir uns zwei der Literale greifen und

0:20:59.540,0:21:04.560
diese paarweise vergleichen. Und dann feststellen, was denn
hier ersetzt werden muss. Also ich könnte zum Beispiel

0:21:04.560,0:21:09.110
das erste und das dritte Literal nehmen, P(x) und
P(y'). Ich hätte auch eine andere Wahl treffen können,

0:21:09.110,0:21:13.780
aber nehmen wir mal an, ich wähle diese beiden als Erstes. Dann
kann ich denen sofort ansehen, wie ich das zu ersetzen habe.

0:21:13.780,0:21:19.770
Ich müsste x durch y' ersetzen, oder y' durch x.
Da kann ich mich entscheiden. Aber eine von diesen

0:21:19.770,0:21:28.810
beiden Ersetzungen muss ich durchführen. Denn genau wenn
ich das tue, mache ich diese beiden Literale gleich.

0:21:28.810,0:21:33.010
Das heißt, ich lege mich darauf jetzt fest und habe
es dann hinterher natürlich nicht mehr mit diesen drei

0:21:33.010,0:21:38.370
Literalen zu tun, sondern nur noch mit dieser
Menge. Denn wenn ich x durch y' ersetze, dann fällt

0:21:38.370,0:21:45.290
das ja zusammen, nämlich zu
P(y'). Das heißt, meine Restmenge

0:21:45.290,0:21:50.570
wäre dann diese Menge. Die muss ich jetzt auch
noch gleich machen. Wie kann ich die gleich machen?

0:21:50.570,0:21:56.890
Ich greife mir zwei Literale. Das können ja nur die
beiden sein. Ich vergleiche also P(y') gegen P(f(a)).

0:21:56.890,0:22:02.020
Und das ist auch klar: Da gibt es genau eine Möglichkeit,
die gleichzumachen. Nämlich indem ich y' durch f(a) ersetze.

0:22:02.020,0:22:07.110
Ich darf ja nicht Funktionssymbole oder Konstanten durch irgendwas
ersetzen. Ich darf nur Variablen durch irgendwas ersetzen. Deswegen ist das

0:22:07.110,0:22:16.790
die einzige Möglichkeit, die beiden gleichzumachen. Also
möchte ich y' durch f(a) ersetzen. Weil ich das tue,

0:22:16.790,0:22:21.940
muss ich jetzt aber auch dieses y' hier ersetzen. Ich
muss aufpassen: Man sammelt diese Ersetzungen auf,

0:22:21.940,0:22:27.420
muss sie aber auch kombinieren. Also weil ich hier oben
gesagt habe, ich möchte x durch y' ersetzen, und jetzt sage,

0:22:27.420,0:22:35.790
ich möchte y' durch f(a) ersetzen, muss ich also insgesamt
was tun? x durch f(a) ersetzen und y' durch f(a) ersetzen.

0:22:35.790,0:22:43.630
Das hier findet sich hier wieder. Und diese
vorher getroffene Ersetzung, die wird sozusagen

0:22:43.630,0:22:50.070
umgeschrieben dahingehend, dass alles, was
hier in der rechten Seite steht (das y'),

0:22:50.070,0:22:56.890
auch durch f(a) ersetzt werden muss. Ich muss also sozusagen
diese Ersetzung auch auf die rechten Seiten aller schon

0:22:56.890,0:23:03.700
zuvor aufgesammelten Ersetzungen anwenden.
Deswegen habe ich dann hier auch f(a).

0:23:03.700,0:23:08.440
Und die Menge wird natürlich auch nochmal schrumpfen.
Denn jetzt ersetze ich y' durch f(a). Das heißt,

0:23:08.440,0:23:12.840
dann habe ich nur noch dieses eine Literal. Wenn ich das erreicht
habe, dass ich eine nur noch einelementige Menge von Literalen habe,

0:23:12.840,0:23:17.980
dann bin ich fertig. Dann gibt es nichts weiter
zu unifizieren. Dann sind die Terme gleichgemacht.

0:23:17.980,0:23:24.310
Und die zuletzt gebildete Gesamtsubstitution,
diese Aufsammlung von Ersetzungen hier,

0:23:24.310,0:23:28.850
das wäre dann die Antwort. Das wäre dann
das, was in dem Resolutionsbeweis an der

0:23:28.850,0:23:35.750
entsprechenden Stelle zu stehen hat. Es
muss nicht immer so sein, dass jetzt

0:23:35.750,0:23:40.270
in jedem Schritt wirklich die Menge schrumpft,
von drei auf zwei auf eins. Es könnte auch mal

0:23:40.270,0:23:44.940
gar nicht schrumpfen und erst nach ein paar
weiteren Schritten wieder die Anzahl der Literale in

0:23:44.940,0:23:48.990
der Menge schrumpfen. Oder es könnte auch mal in
einem Schritt mehr als ein Literal verschwinden.

0:23:48.990,0:23:53.950
In dem Fall ist es jetzt so, dass es genau in jedem Schritt
um eins gesunken ist. Das muss nicht unbedingt so sein.

0:23:53.950,0:23:59.350
Es kann auch sein, dass erst mal nur die Literale
leicht angepasst werden und irgendwann verschwindet

0:23:59.350,0:24:08.270
dann mal eins. Das war ja nur ein Beispiel. Wie sind
die Schritte jetzt allgemein? Wir machen etwas, solange

0:24:08.270,0:24:15.020
diese Menge noch mehr als ein Literal enthält.
Wenn wir irgendwann nur noch ein Literal haben,

0:24:15.020,0:24:21.340
dann sind wir fertig. Als Vorgehen wäre es: Wir haben am Anfang
diese Menge. Solange die noch mehr als ein Literal enthält,

0:24:21.340,0:24:26.760
suchen wir uns zwei Literale aus. Dann haben wir zwei
Literale. Wie wir es eben in dem Beispiel auch getan hatten.

0:24:26.760,0:24:30.570
Dann suchen wir jeweils in diesen Literalen nach einem
Unterschied. Und zwar nach dem ersten Unterschied,

0:24:30.570,0:24:36.930
wenn man sich so von links nach rechts diese
beiden Literale anschaut. Nehmen wir an,

0:24:36.930,0:24:41.780
wir haben so eine Stelle gefunden. Und zwar die
linkeste Stelle in diesen zwei gewählten Literalen,

0:24:41.780,0:24:47.560
wo die sich unterscheiden. Jetzt gibt es mehrere
Fälle. Es könnte sein, dass an diesen beiden

0:24:47.560,0:24:52.700
Stellen jeweils Konstanten oder Terme stehen,
aber jedenfalls keine Variablen. Wenn in keinem

0:24:52.700,0:24:57.670
dieser beiden Literale an der entsprechenden
Stelle eine Variable steht, dann

0:24:57.670,0:25:03.260
müssen wir abbrechen. Dann sind
die beiden gewählten Literale

0:25:03.260,0:25:10.260
nicht unifizierbar. Und dann ist auch die Ursprungsmenge
nicht unifizierbar gewesen. Wenn wir an einer Stelle sind,

0:25:10.260,0:25:14.440
wo die sich unterscheiden und an keiner der beiden
Stellen steht eine Variable, dann können wir

0:25:14.440,0:25:20.160
durch Variablenbelegung nichts ausrichten. Dann
gibt es einfach keine Möglichkeit, die beiden

0:25:20.160,0:25:25.630
Literale gleichzumachen. Dann war auch
die Ursprungsmenge nicht unifizierbar.

0:25:25.630,0:25:28.510
Das heißt, dann können wir diesen Resolutionsschritt
an der Stelle nicht durchführen. Dann müssen wir uns

0:25:28.510,0:25:33.720
eine andere Stelle suchen, vielleicht
andere Klauseln auswählen und darin andere

0:25:33.720,0:25:40.520
Literale wählen, um einen Resolutionsschritt zu probieren.
Die konkrete Unifikation, die wir gerade probieren,

0:25:40.520,0:25:46.650
ist dann eben nicht erfolgreich. Nehmen wir an,
der Fall tritt nicht ein, sondern in mindestens

0:25:46.650,0:25:53.520
einem der beiden Literale steht an der unterschiedlichen
Stelle tatsächlich eine Variable. Nehmen wir mal an,

0:25:53.520,0:26:00.070
das sei die Variable v, die eben an dieser
Stelle in einem der beiden Literale auftritt.

0:26:00.070,0:26:08.430
Es könnte natürlich auch auf beiden Seiten eine Variable
stehen. Dann nehmen wir uns eine davon. Also die Variable v.

0:26:08.430,0:26:14.150
Und in dem anderen Literal steht dort irgendwie ein
Term. Wir nehmen also den Teilterm, der an der gleichen

0:26:14.150,0:26:19.300
Stelle in dem anderen Literal steht. Das könnte
zufälligerweise auch eine Variable sein. Dann ist das so.

0:26:19.300,0:26:24.220
Es kann aber auch ein allgemeiner Term sein:
eine Konstante, ein Funktionssymbol angewandt auf

0:26:24.220,0:26:30.940
weitere Funktionssymbole oder Konstanten oder
Variablen. Jetzt haben wir dieses v und dieses t.

0:26:30.940,0:26:38.400
Jetzt schauen wir uns an, ob das v in dem t
vorkommt. Das könnte nämlich sein. Wenn dem so ist,

0:26:38.400,0:26:42.830
dann brechen wir auch ab. Wenn das v in dem t vorkommt,
dann können wir die beiden nicht einfach nur dadurch

0:26:42.830,0:26:49.730
gleich machen, dass wir v durch t ersetzen. Denn
wir müssten dann ja v auch in t durch t ersetzen.

0:26:49.730,0:26:57.090
Und dann wächst dieser Term sozusagen und
dann besteht keine Chance, dass wir irgendwie

0:26:57.090,0:27:02.020
diese beiden Ursprungsliterale gleich kriegen durch
so eine Ersetzung. Also wenn v in t vorkommt,

0:27:02.020,0:27:12.080
brechen wir ab und sagen auch: „Tut uns leid.
Die Ursprungsmenge war nicht unifizierbar.“

0:27:12.080,0:27:17.450
Ansonsten, wenn v also nicht in t vorkommt,
dann halten wir einfach fest, dass wir v

0:27:17.450,0:27:22.470
durch t ersetzen wollen. Dann ergibt das Sinn.
Was heißt das dann? Zum einen wenden wir dann

0:27:22.470,0:27:26.250
diese Ersetzung [v / t] auf alle Literale
der Menge an, die wir gerade haben.

0:27:26.250,0:27:30.330
Die könnte dadurch kleiner werden, weil vielleicht
Sachen zusammenfallen und die Menge dadurch schrumpft.

0:27:30.330,0:27:35.850
Oder auch nicht. Jedenfalls wenden wir diese
Ersetzung auf alle noch vorhandenen Literale

0:27:35.850,0:27:40.550
in der Menge an. Und das ist dann die Menge,
mit der wir den nächsten Schritt machen würden.

0:27:40.550,0:27:45.360
Gleichzeitig müssen wir natürlich auch festhalten, dass
v durch t zu ersetzen ist. Das halten wir also fest,

0:27:45.360,0:27:49.930
zusätzlich zu allen vielleicht schon zuvor festgehaltenen
Ersetzungen. Das ist, wo wir uns sozusagen diese Liste

0:27:49.930,0:27:56.160
von Variabel-Term-Ersetzungen zusammensammeln.
Und wie in dem Beispiel eben auch schon gesehen,

0:27:56.160,0:28:00.990
müssen wir gleichzeitig auch noch diese
Ersetzung auf allen bereits vorher festgehaltenen

0:28:00.990,0:28:10.270
Ersetzungen ausführen. Ich halte also nicht nur
[v / t] fest, sondern wenn ich mir vorher schon

0:28:10.270,0:28:15.030
Ersetzungen festgehalten habe, dann mache ich
in deren rechten Seiten jeweils auch v / t.

0:28:15.030,0:28:23.860
So wie wir das eben in dem Beispiel auch getan
hatten. Das wäre das Vorgehen. Zu beachten ist dabei:

0:28:23.860,0:28:28.490
Natürlich machen wir das nur, wenn
die Ursprungsliterale zumindest alle

0:28:28.490,0:28:34.950
das gleiche Prädikatsymbol hatten. Andernfalls
ist sowieso keine Resolution möglich.

0:28:34.950,0:28:39.100
Auch festzuhalten und zu beachten ist, dass
wir immer nur Variablen durch Terme setzen.

0:28:39.100,0:28:46.010
Niemals umgekehrt. Es wird niemals irgendwie hier
umgekehrt stehen, dass links ein Nicht-Variablenterm steht

0:28:46.010,0:28:51.630
(eine Konstante oder ein komplexer Term) und
rechts eine Variable zum Beispiel. Es ist immer:

0:28:51.630,0:29:00.780
Variable durch Term ersetzen. Und wie auch schon festgehalten:
Falls v und t beides Variablen sind, dann ist egal,

0:29:00.780,0:29:05.960
wie herum wir das machen. Wenn in beiden Literalen
an der entsprechenden Stelle eine Variable steht,

0:29:05.960,0:29:15.520
dann wählen wir einfach eine davon als
v und die andere wird als t benutzt.

0:29:15.520,0:29:20.100
Und so lässt sich das dann immer ausführen. Nicht
nur in dem Beispiel eben, sondern so kann man

0:29:20.100,0:29:30.520
allgemein für eine Menge von Literalen so einen allgemeinsten
Unifikator finden. Und das wenden wir jetzt noch einmal an

0:29:30.520,0:29:41.140
auf unser Alien-Beispiel. Das war ein Beispiel, das
wir auch schon mit Grundresolution behandelt hatten.

0:29:41.140,0:29:49.980
Das sah so aus. Damit hatten wir die Grundresolution illustriert.
Und jetzt würden wir stattdessen das mit prädikatenlogischer

0:29:49.980,0:30:00.450
Resolution tun. Also, wir haben diese Ausgangsklauseln
und wollen gern die leere Klausel herleiten.

0:30:00.450,0:30:05.320
Ich beginne wieder mit den ersten beiden
Klauseln. Das muss natürlich nicht immer so sein.

0:30:05.320,0:30:10.610
Hier sind die aber so in der Reihenfolge aufgeschrieben,
dass es sinnvoll ist, tatsächlich diese beiden

0:30:10.610,0:30:17.110
zuerst zusammenzubringen. Muss ich
dabei irgendwelche Variablen umbenennen?

0:30:17.110,0:30:22.530
Erstmal nicht. Denn hier steht y. Hier steht gar nichts.
Also, es gibt keine gemeinsamen Variablen in dieser

0:30:22.530,0:30:26.610
und dieser Klausel. Das y taucht hier zweimal auf.
Das ist aber nicht schädlich. Es darf dann nur nicht

0:30:26.610,0:30:32.670
auch noch hier auftauchen, wenn es schon rechts
auftaucht. Also, ich muss hier keine Variablen umbenennen.

0:30:32.670,0:30:39.440
Aber ich muss natürlich unifizieren. Nämlich
diese beiden Literale sollen bitte gleich werden,

0:30:39.440,0:30:43.990
bis auf das Komplement, bis auf die Negation hier.
Und natürlich geht das, indem ich die Variable y

0:30:43.990,0:30:51.160
durch a ersetze. Deswegen ist das hier mein Unifikator.
Und hier sehe ich das einfach, ohne jetzt tatsächlich

0:30:51.160,0:30:56.920
diesen Algorithmus anzuwenden. Aber der Algorithmus würde
das auch liefern, in natürlich sehr wenigen Schritten.

0:30:56.920,0:31:07.980
Dann kann ich das also resolvieren und erhalte
als neue Klauseln den Rest, nämlich S(y).

0:31:07.980,0:31:14.330
Muss darauf aber natürlich diesen Unifikator anwenden.
Das ist ganz wichtig. Die beiden Literale fallen weg.

0:31:14.330,0:31:20.860
Und auf alle anderen Literale, die entweder
hier oder hier noch übrig bleiben, auf die

0:31:20.860,0:31:41.920
wird dieser Unifikator angewandt. Also, deswegen
habe ich hier nicht etwa S(y), sondern S(a).

0:31:41.920,0:31:46.430
Wie geht es dann weiter? Zum Beispiel könnte ich
jetzt mit diesen beiden Klauseln noch etwas tun.

0:31:46.430,0:31:52.270
Auch da stellt sich wieder die Frage: Muss ich Variablen umbenennen?
Zunächst erstmal nicht. Denn z und v, da überschneidet sich nichts.

0:31:52.270,0:31:59.710
Also, ich muss keine Variablen umbenennen. Aber ich muss
unifizieren. Und ich möchte gern das M(z) mit ¬M(v)

0:31:59.710,0:32:04.600
unifizieren. Jetzt habe ich mal die Situation,
wenn ich den Unifikations-Algorithmus anwende,

0:32:04.600,0:32:11.240
dass die unterschiedliche Stelle genau z vs. v ist, also
zwei Variablen. Und da kann ich entscheiden, z durch v

0:32:11.240,0:32:19.090
oder v durch z zu ersetzen. Ich wähle mal: z durch v. Was
passiert dann? Dann werden diese beiden Literale gleich.

0:32:19.090,0:32:25.130
Ich kann also resolvieren. Die beiden verschwinden. Die
anderen bleiben übrig. Aber ich muss z durch v ersetzen.

0:32:25.130,0:32:33.920
Das führt zu \{¬A(v), ¬S(v)\}. Hier gibt es kein z.
Aber hier gibt es ein z. Das wird durch v ersetzt.

0:32:33.920,0:32:41.720
Und ich erhalte deswegen diese neue Klausel. Das
ist wieder anders als bei der Grundresolution.

0:32:41.720,0:32:47.630
Da musste ich nämlich, um irgendwann später
mit diesem S(a) resolvieren zu können,

0:32:47.630,0:32:55.000
mich hier schon festlegen, dass ich sowohl z als
auch v durch a ersetze. So sah das hier aus.

0:32:55.000,0:33:01.050
Da musste ich hier oben direkt z und v durch a ersetzen, damit
das später hier unten passt. In der allgemeinen Resolution

0:33:01.050,0:33:06.720
mache ich das nicht. Da musste ich an dieser Stelle
nur festhalten, dass u und v gleich sein sollen.

0:33:06.720,0:33:14.750
Dass sie auch a sein sollen, später, wird
erst eingeführt, wenn ich es wirklich brauche.

0:33:14.750,0:33:20.870
Also bin ich jetzt bei diesen beiden
Klauseln. Jetzt werde ich resolvieren wollen.

0:33:20.870,0:33:27.230
Und jetzt würde ich erst festlegen, dass v gleich a sein soll.
Denn wenn ich hier resolviere, muss ich keine Variablen umbenennen,

0:33:27.230,0:33:31.770
weil es keine gemeinsamen Variablen hier und
hier gibt, aber ich muss dann unifizieren.

0:33:31.770,0:33:38.110
Nämlich dieses Literal mit diesem Literal,
weil die dann komplementär werden.

0:33:38.110,0:33:46.010
Das geht, indem ich v durch a ersetze. Das heißt, hier
wird jetzt v durch a ersetzt, in dieser Unifikation

0:33:46.010,0:33:53.300
und nicht schon hier, wie in vorauseilendem Gehorsam
hier in der Grundresolution. Was kommt dann heraus?

0:33:53.300,0:33:59.630
Das und das verschwindet. Es bleibt \{¬A(v)\}
übrig. Aber v ist natürlich durch a zu ersetzen,

0:33:59.630,0:34:09.630
wegen dieser Unifikation hier, die
auf alle Literale anzuwenden ist.

0:34:09.630,0:34:15.790
Dann habe ich hier ein Literal und hier ein Literal.
Die passen zueinander. Variablen kommen nicht vor.

0:34:15.790,0:34:20.990
Deswegen muss ich da auch keine Variablenumbenennung
vornehmen. Und selbst das Unifizieren ist hier

0:34:20.990,0:34:28.131
sehr einfach und trivial. Denn es gibt gar keine
Variablen und dieses Literal und dieses Literal

0:34:28.131,0:34:37.100
sind schon von vornherein komplementär. Das heißt,
hier sind keine Variablenersetzungen vorzunehmen.

0:34:37.100,0:34:40.990
Das heißt, hier steht einfach die leere Substitution.
Während ich hier immer aufsammle, was durch was

0:34:40.990,0:34:45.440
ersetzt wird, ist es hier einfach leer geblieben
dazwischen. Das kann ich jetzt so aufzeichnen.

0:34:45.440,0:34:51.260
Ich könnte es auch einfach weglassen und einfach direkt hier
den Strich weitermachen. Aber wenn wir das hinschreiben wollen,

0:34:51.260,0:34:59.810
dann würde ich hier eben die leere Substitution hinschreiben,
[] und dazwischen nichts. Keine Paare von Variablen und Termen

0:34:59.810,0:35:05.340
aufgeführt. Und wie geht es weiter?
Jetzt verschwinden diese beiden Literale.

0:35:05.340,0:35:17.300
Es kommt die leere Klausel heraus und der Beweis
war erfolgreich. Er entspricht diesem Beweis

0:35:17.300,0:35:24.350
auf gewisse Art und Weise, aber verwendet eben
diese Strategie, Variablenbelegungen erstmal

0:35:24.350,0:35:30.440
herauszuzögern und nur durchzuführen, wenn
wirklich motiviert durch einen konkreten

0:35:30.440,0:35:38.640
Resolutionsschritt. Anders als hier, wo das
schon vorzeitig zum Beispiel instanziiert wurde.

0:35:38.640,0:35:46.740
Es kommt die leere Klausel heraus. Das heißt,
die Ursprungsaussage war nicht erfüllbar.

0:35:46.740,0:35:52.420
Und das war gut, weil dann nämlich die negierte
Version davon eine Tautologie war, was wir

0:35:52.420,0:35:57.550
auch erwartet hatten in dem Beispiel. Und auch
klar: Wenn ich diese Klausel hier nicht hätte,

0:35:57.550,0:36:02.340
das wurde vorher auch schon diskutiert, wäre
auch kein erfolgreicher Beweis möglich gewesen.

0:36:02.340,0:36:07.820
Genau wie bei der Grundresolution. Denn es
gibt immer dann einen Grundresolution-Beweis,

0:36:07.820,0:36:11.590
wenn es einen auf diese Weise mit Unifikation funktionierenden
prädikatenlogischen Beweis gibt und umgekehrt.

0:36:11.590,0:36:19.490
Beide Verfahren sind gleich mächtig, aber
unter Umständen verschieden einfach anzuwenden.

0:36:19.490,0:36:23.860
In Übungsaufgaben oder in der Klausur wird Ihnen das entweder
freigestellt, ob Sie Grundresolution oder prädikatenlogische Resolution

0:36:23.860,0:36:28.660
durchführen, oder es wird eben gesagt, machen Sie es
so, machen Sie so. Sie sollten also beides können.
