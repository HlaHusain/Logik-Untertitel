0:00:00.820,0:00:06.340
In Aufgabe drei sollen wir ein einstelliges
Prolog-Prädikat valid zur Validierung von

0:00:06.340,0:00:07.510
Datumsangaben schreiben.

0:00:07.510,0:00:11.500
Ein Datum besteht aus einem Tag, der als Zahl
angegeben wird, einem Monat, der als Name

0:00:11.500,0:00:14.469
angegeben wird, sowie einem Jahr,
das wiederum als Zahl angegeben wird.

0:00:14.469,0:00:19.230
Die folgenden beiden Anfragen sollen
einmal „true“ und einmal „false“ ergeben.

0:00:19.230,0:00:22.710
Zudem sollen Tages- und
Jahreszahlen immer positiv sein.

0:00:22.710,0:00:24.650
Schaltjahre sollen ignoriert werden.

0:00:24.650,0:00:30.589
Wir haben das folgende, bereits definierte
Hilfsprädikat, in dem die Tage von jedem

0:00:30.589,0:00:33.640
Monat bereits angegeben sind: Januar hat 31
Tage.

0:00:33.640,0:00:36.640
Februar hat 28 Tage, da
Schaltjahre ignoriert werden.

0:00:36.640,0:00:38.620
März hat 31 Tage und so weiter.

0:00:38.620,0:00:41.090
Zuerst schreiben wir valid auf.

0:00:41.090,0:00:45.100
So heißt unser Prädikat, welches laut
Aufgabenstellung einstellig sein soll.

0:00:45.100,0:00:50.399
In der Beispielanfrage der Aufgabenstellung
sehen wir bereits die benötigte Struktur.

0:00:50.399,0:00:54.870
Und zwar: Date, Day, Month und Year.

0:00:54.870,0:00:57.469
Das verwenden wir jetzt auch hier unten.

0:00:57.469,0:01:00.700
Wir beginnen mit Date, Klammer auf, Day.

0:01:00.700,0:01:06.600
Hier müssen wir jetzt eine Variable definieren,
da es sich hierbei um jeden möglichen Tag

0:01:06.600,0:01:10.750
handeln kann, den der Benutzer eingibt.

0:01:10.750,0:01:13.729
Variablen werden großgeschrieben,
weshalb wir hier ein großes D verwenden.

0:01:13.729,0:01:18.909
Es folgt ein weiteres Komma, dann Month und
dann wieder die Variable, großes M, Year

0:01:18.909,0:01:21.630
und dann in Klammern wieder
die Variable, ein großes Y.

0:01:21.630,0:01:24.810
Wir schließen alle drei Klammern.

0:01:24.810,0:01:28.040
Dann fragen wir uns, wann das gilt.

0:01:28.040,0:01:33.790
Einerseits müssen die Tage zum Monat passen,
also zu dem Hilfsprädikat, das wir bereits

0:01:33.790,0:01:34.790
definiert haben.

0:01:34.790,0:01:39.090
Zum Beispiel dürfte im Februar der Tag 29
nicht vorkommen, da wir oben definiert haben,

0:01:39.090,0:01:42.920
dass Februar nur 28 Tage hat und
wir Schaltjahre außen vor lassen.

0:01:42.920,0:01:45.130
Wir haben also zuerst Days.

0:01:45.130,0:01:52.090
Das ist zweistellig, da es vom Monat und von
der Tageszahl abhängt: Großes M für Monat,

0:01:52.090,0:01:56.479
wie wir es bereits im Kopf definiert haben.

0:01:56.479,0:02:01.799
Dann ein großes N für Number, für die Tageszahl.

0:02:01.799,0:02:04.970
Die Klammer wird geschlossen.

0:02:04.970,0:02:07.539
Tages- und Jahreszahlen
sollen immer positiv sein.

0:02:07.539,0:02:12.540
Deshalb definieren wir, dass
D größer als null sein muss.

0:02:12.540,0:02:19.220
Außerdem darf D auch maximal nur so groß
sein, wie die Number, welche im Prädikat

0:02:19.220,0:02:20.300
definiert wurde.

0:02:20.300,0:02:22.810
Zum Beispiel steht bei Days: January, 31.

0:02:22.810,0:02:26.530
Hier haben wir festgelegt: Days M, N festgelegt.

0:02:26.530,0:02:35.340
Dann wäre das N die Number, zum Beispiel
31, 28, 31, 30. Deswegen darf D auch maximal

0:02:35.340,0:02:37.290
so groß sein wie N.

0:02:37.290,0:02:39.580
Das heißt kleiner gleich.

0:02:39.580,0:02:45.960
Außerdem muss auch die Jahreszahl
positiv sein, also Y größer als null.

0:02:45.960,0:02:51.630
Das können wir jetzt in Prolog testen, indem
wir die beiden Anfragen, die hier beispielhaft

0:02:51.630,0:02:53.230
gegeben sind, eingeben.

0:02:53.230,0:02:58.030
Valid Date, Day, 18, Dezember und 2020.

0:02:58.030,0:02:59.150
Und wir erhalten „true“.

0:02:59.150,0:03:03.310
Das gleiche testen wir für
den 31. April 2004 testen.

0:03:03.310,0:03:07.640
Den gibt es nicht, da wir festgelegt
haben, dass der April nur 30 Tage hat.

0:03:07.640,0:03:10.450
Deshalb lautet das Ergebnis „false“.
